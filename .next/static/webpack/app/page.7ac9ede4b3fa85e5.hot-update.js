"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/api/Page.tsx":
/*!******************************!*\
  !*** ./src/app/api/Page.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderBookConsumer: function() { return /* binding */ OrderBookConsumer; },\n/* harmony export */   OrderBookContext: function() { return /* binding */ OrderBookContext; },\n/* harmony export */   OrderBookProvider: function() { return /* binding */ OrderBookProvider; },\n/* harmony export */   fetchOpenInterestHistory: function() { return /* binding */ fetchOpenInterestHistory; },\n/* harmony export */   fetchVolumeRatio: function() { return /* binding */ fetchVolumeRatio; },\n/* harmony export */   processOpenInterestData: function() { return /* binding */ processOpenInterestData; },\n/* harmony export */   processOpenInterestHistData: function() { return /* binding */ processOpenInterestHistData; },\n/* harmony export */   processOrderBookData: function() { return /* binding */ processOrderBookData; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ OrderBookProvider,OrderBookConsumer,fetchOpenInterestHistory,fetchVolumeRatio,processOrderBookData,processOpenInterestData,processOpenInterestHistData,OrderBookContext auto */ \nvar _s = $RefreshSig$();\n\nconst OrderBookContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst BASE_URL = \"https://fapi.binance.com/fapi/v1\";\nconst DEFAULT_SYMBOL = \"KAITOUSDT\";\nconst DEFAULT_LIMIT = 100;\nfunction OrderBookProvider(param) {\n    let { symbol = DEFAULT_SYMBOL, limit = DEFAULT_LIMIT, children } = param;\n    _s();\n    const [orderBookData, setOrderBookData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [openInterestData, setOpenInterestData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [openInterestHistData, setOpenInterestHistData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let orderBookIntervalId = null;\n        let openInterestIntervalId = null;\n        const fetchOrderBook = async ()=>{\n            try {\n                const queryParams = new URLSearchParams({\n                    symbol,\n                    limit: limit.toString()\n                });\n                const response = await fetch(\"\".concat(BASE_URL, \"/depth?\").concat(queryParams.toString()));\n                if (!response.ok) {\n                    throw new Error(\"API request failed with status \".concat(response.status));\n                }\n                const data = await response.json();\n                console.log(\"Order book data fetched:\", data);\n                setOrderBookData(data);\n                setLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching order book data:\", error);\n                setError(error instanceof Error ? error : new Error(\"Failed to fetch order book data\"));\n                setLoading(false);\n            }\n        };\n        const fetchOpenInterest = async ()=>{\n            try {\n                const response = await fetch(\"\".concat(BASE_URL, \"/openInterest?symbol=\").concat(symbol));\n                if (!response.ok) {\n                    throw new Error(\"API request failed with status \".concat(response.status));\n                }\n                const data = await response.json();\n                console.log(\"Open interest data fetched:\", data);\n                setOpenInterestData(data);\n                // Fetch historical data\n                const histResponse = await fetch(\"\".concat(BASE_URL, \"/futures/data/openInterestHist?symbol=\").concat(symbol, \"&period=1h&limit=24\"));\n                if (!histResponse.ok) {\n                    throw new Error(\"API request failed with status \".concat(histResponse.status));\n                }\n                const histData = await histResponse.json();\n                setOpenInterestHistData(histData);\n            } catch (error) {\n                console.error(\"Error fetching open interest data:\", error);\n                setError(error instanceof Error ? error : new Error(\"Failed to fetch open interest data\"));\n            }\n        };\n        // Initial fetches\n        fetchOrderBook();\n        fetchOpenInterest();\n        // Set up intervals\n        orderBookIntervalId = setInterval(fetchOrderBook, 500);\n        openInterestIntervalId = setInterval(fetchOpenInterest, 500);\n        // Cleanup function\n        return ()=>{\n            if (orderBookIntervalId) {\n                clearInterval(orderBookIntervalId);\n            }\n            if (openInterestIntervalId) {\n                clearInterval(openInterestIntervalId);\n            }\n        };\n    }, [\n        symbol,\n        limit\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrderBookContext.Provider, {\n        value: {\n            orderBookData,\n            openInterestData,\n            openInterestHistData,\n            loading,\n            error\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/donnapachpeantham/Code/Next-Mac/src/app/api/Page.tsx\",\n        lineNumber: 112,\n        columnNumber: 9\n    }, this);\n}\n_s(OrderBookProvider, \"JLqcqs6SzZk9ByJEK08dxLqNH7A=\");\n_c = OrderBookProvider;\nfunction OrderBookConsumer(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrderBookContext.Consumer, {\n        children: (value)=>// Render the children directly here\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: children\n            }, void 0, false)\n    }, void 0, false, {\n        fileName: \"/Users/donnapachpeantham/Code/Next-Mac/src/app/api/Page.tsx\",\n        lineNumber: 126,\n        columnNumber: 9\n    }, this);\n}\n_c1 = OrderBookConsumer;\nasync function fetchOpenInterestHistory(symbol, period) {\n    try {\n        const response = await fetch(\"/api/openInterestHistory?symbol=\".concat(symbol, \"&period=\").concat(period));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch open interest history\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching open interest history:\", error);\n        return null;\n    }\n}\nasync function fetchVolumeRatio(symbol, period) {\n    try {\n        const response = await fetch(\"/api/volumeRatio?symbol=\".concat(symbol, \"&period=\").concat(period));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch volume ratio\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching volume ratio:\", error);\n        return null;\n    }\n}\nfunction processOrderBookData(orderBookData) {\n    if (!orderBookData) return [];\n    const heatmapData = [];\n    orderBookData.bids.forEach((bid, index)=>{\n        heatmapData.push([\n            parseFloat(bid[0]),\n            index,\n            parseFloat(bid[1]) // Quantity \n        ]);\n    });\n    orderBookData.asks.forEach((ask, index)=>{\n        heatmapData.push([\n            parseFloat(ask[0]),\n            index + orderBookData.bids.length,\n            parseFloat(ask[1]) // Quantity \n        ]);\n    });\n    return heatmapData;\n}\nfunction processOpenInterestData(openInterestData) {\n    if (!openInterestData) return null;\n    return {\n        openInterest: parseFloat(openInterestData.openInterest),\n        symbol: openInterestData.symbol,\n        time: new Date(openInterestData.time),\n        formattedTime: new Date(openInterestData.time).toLocaleString()\n    };\n}\nfunction processOpenInterestHistData(histData) {\n    if (!histData || histData.length === 0) return null;\n    const processedData = histData.map((item)=>({\n            timestamp: new Date(parseInt(item.timestamp)),\n            openInterest: parseFloat(item.sumOpenInterest),\n            openInterestValue: parseFloat(item.sumOpenInterestValue)\n        }));\n    // Calculate some statistics\n    const latestValue = processedData[processedData.length - 1].openInterest;\n    const oldestValue = processedData[0].openInterest;\n    const percentageChange = (latestValue - oldestValue) / oldestValue * 100;\n    const maxValue = Math.max(...processedData.map((d)=>d.openInterest));\n    const minValue = Math.min(...processedData.map((d)=>d.openInterest));\n    return {\n        data: processedData,\n        stats: {\n            percentageChange,\n            maxValue,\n            minValue,\n            latestValue,\n            oldestValue\n        }\n    };\n}\n// Export OrderBookContext\n\nvar _c, _c1;\n$RefreshReg$(_c, \"OrderBookProvider\");\n$RefreshReg$(_c1, \"OrderBookConsumer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/api/Page.tsx\n"));

/***/ })

});